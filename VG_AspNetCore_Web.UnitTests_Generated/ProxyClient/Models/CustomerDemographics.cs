// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CustomerDemographics
    {
        /// <summary>
        /// Initializes a new instance of the CustomerDemographics class.
        /// </summary>
        public CustomerDemographics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerDemographics class.
        /// </summary>
        public CustomerDemographics(string customerTypeId = default(string), string customerDesc = default(string), IList<CustomerCustomerDemo> customerCustomerDemo = default(IList<CustomerCustomerDemo>))
        {
            CustomerTypeId = customerTypeId;
            CustomerDesc = customerDesc;
            CustomerCustomerDemo = customerCustomerDemo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomerTypeId")]
        public string CustomerTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomerDesc")]
        public string CustomerDesc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomerCustomerDemo")]
        public IList<CustomerCustomerDemo> CustomerCustomerDemo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CustomerTypeId != null)
            {
                if (CustomerTypeId.Length > 10)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CustomerTypeId", 10);
                }
                if (CustomerTypeId.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CustomerTypeId", 0);
                }
            }
            if (CustomerCustomerDemo != null)
            {
                foreach (var element in CustomerCustomerDemo)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
