// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EmployeeTerritories
    {
        /// <summary>
        /// Initializes a new instance of the EmployeeTerritories class.
        /// </summary>
        public EmployeeTerritories()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EmployeeTerritories class.
        /// </summary>
        public EmployeeTerritories(int? employeeId = default(int?), string territoryId = default(string), Employees employee = default(Employees), Territories territory = default(Territories))
        {
            EmployeeId = employeeId;
            TerritoryId = territoryId;
            Employee = employee;
            Territory = territory;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EmployeeId")]
        public int? EmployeeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TerritoryId")]
        public string TerritoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Employee")]
        public Employees Employee { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Territory")]
        public Territories Territory { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TerritoryId != null)
            {
                if (TerritoryId.Length > 20)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "TerritoryId", 20);
                }
                if (TerritoryId.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "TerritoryId", 0);
                }
            }
            if (Employee != null)
            {
                Employee.Validate();
            }
            if (Territory != null)
            {
                Territory.Validate();
            }
        }
    }
}
