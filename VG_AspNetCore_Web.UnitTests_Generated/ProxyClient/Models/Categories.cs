// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Categories
    {
        /// <summary>
        /// Initializes a new instance of the Categories class.
        /// </summary>
        public Categories()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Categories class.
        /// </summary>
        public Categories(string categoryName, int? categoryId = default(int?), string description = default(string), byte[] picture = default(byte[]), IList<Products> products = default(IList<Products>))
        {
            CategoryId = categoryId;
            CategoryName = categoryName;
            Description = description;
            Picture = picture;
            Products = products;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryId")]
        public int? CategoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryName")]
        public string CategoryName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Picture")]
        public byte[] Picture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Products")]
        public IList<Products> Products { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CategoryName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CategoryName");
            }
            if (CategoryName != null)
            {
                if (CategoryName.Length > 15)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CategoryName", 15);
                }
                if (CategoryName.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CategoryName", 0);
                }
            }
            if (Products != null)
            {
                foreach (var element in Products)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
